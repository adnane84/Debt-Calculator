{"ast":null,"code":"var _jsxFileName = \"/Users/adnaneabid/Desktop/react/Debt Calculator React/calculator/src/PaymentDue.jsx\";\nimport React from \"react\";\nimport Entries from \"./Entries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INIT_STATE = {\n  input: 0,\n  history: [],\n  totalPaid: 0,\n  minimumDue: 0,\n  loanLeft: 0,\n  paidAll: 0,\n  loanFree: false\n};\nclass PaymentDue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        input: parseFloat(e.target.value)\n      });\n    };\n    this.onClick = () => {\n      this.calcTotal();\n      if (this.state.input.toFixed(2) === this.state.paidAll) {\n        this.freeDebtMessage();\n      } else if (this.state.input >= this.state.paidAll - this.state.minimumDue) {} else if (this.state.input > this.state.paidAll) {\n        alert(` We have noticed that the payment amount entered is greater than the loan amount. This input is not valid as it is not possible to pay more than what is owed.`);\n      } else if (this.state.input >= this.state.minimumDue.toFixed(2)) {\n        this.paymentsHistory();\n        this.updatePay();\n        this.component.current.computeData();\n      } else {\n        alert(`Please enter a payment amount that is equal to or greater than the minimum monthly due. ${this.state.minimumDue.toFixed(2)}`);\n      }\n    };\n    this.paymentsHistory = () => {\n      this.setState(prevState => ({\n        history: [...prevState.history, {\n          paymentNumber: prevState.history.length + 1,\n          id: Date.now(),\n          label: this.state.input,\n          totalPaid: this.state.totalPaid,\n          balance: this.state.loanLeft\n        }]\n      }));\n    };\n    this.updatePay = () => {\n      this.setState({\n        totalPaid: this.state.totalPaid + this.state.input\n      });\n    };\n    this.getData = (minimumPay, debt, paidAll) => {\n      this.setState({\n        minimumDue: minimumPay,\n        loanLeft: debt.toFixed(2),\n        paidAll: paidAll.toFixed(2)\n      });\n    };\n    this.calcTotal = () => {\n      let calcTotal = this.state.loanLeft * 1 + this.state.minimumDue * 1;\n      this.setState({\n        paidAll: calcTotal.toFixed(2)\n      });\n    };\n    this.freeDebtMessage = () => {\n      this.setState({\n        loanFree: true\n      });\n    };\n    this.reset = () => {\n      this.setState(INIT_STATE);\n      this.component.current.reset();\n    };\n    this.component = /*#__PURE__*/React.createRef();\n    this.state = {\n      input: 0,\n      history: [],\n      totalPaid: 0,\n      minimumDue: 0,\n      loanLeft: 0,\n      paidAll: 0,\n      loanFree: false\n    };\n  }\n  render() {\n    let {\n      history,\n      totalPaid,\n      input,\n      minimumDue,\n      loanLeft,\n      paidAll\n    } = this.state;\n    const loanFreeMessage = this.state.loanFree ? \"is-visible\" : \"\";\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Entries, {\n        ref: this.component,\n        payment: input,\n        getData: this.getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal ${loanFreeMessage}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"free-loan\",\n          children: [\"Dear User, Congratulations! Based on the information provided, it appears that your loan has been fully paid off. Thank you for using our debt calculator to track your loan progress. If you have any questions or need further assistance, please do not hesitate to contact us. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), \" Best regards, The Debt Calculator Team.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button\",\n          onClick: this.reset,\n          children: \"Start a New Loan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pay container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"title\",\n            children: \"Payments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            step: \"0.01\",\n            min: minimumDue.toFixed(2),\n            max: loanLeft,\n            value: input,\n            placeholder: \"$ 00.0\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: this.onClick,\n            children: \"Make a Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [\"Minimum Monthly Payment :\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digits\",\n              children: [\"$ \", minimumDue.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-payments\",\n            children: [\" \", \"New Loan: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digits\",\n              children: [\"$ \", paidAll]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"title\",\n            children: \"Payments Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"payments-history\",\n            children: history.map((payment, index) => {\n              const {\n                paymentNumber,\n                label,\n                totalPaid,\n                balance\n              } = payment;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [paymentNumber, label, totalPaid, balance].map(val => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: val\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this))\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"title\",\n            children: \"Total Amount Paid:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"digits\",\n            children: [\"$ \", totalPaid.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default PaymentDue;","map":{"version":3,"names":["React","Entries","INIT_STATE","input","history","totalPaid","minimumDue","loanLeft","paidAll","loanFree","PaymentDue","Component","constructor","props","handleChange","e","setState","parseFloat","target","value","onClick","calcTotal","state","toFixed","freeDebtMessage","alert","paymentsHistory","updatePay","component","current","computeData","prevState","paymentNumber","length","id","Date","now","label","balance","getData","minimumPay","debt","reset","createRef","render","loanFreeMessage","map","payment","index","val"],"sources":["/Users/adnaneabid/Desktop/react/Debt Calculator React/calculator/src/PaymentDue.jsx"],"sourcesContent":["import React from \"react\";\nimport Entries from \"./Entries\";\n\nconst INIT_STATE = {\n  input: 0,\n  history: [],\n  totalPaid: 0,\n  minimumDue: 0,\n  loanLeft: 0,\n  paidAll: 0,\n  loanFree: false,\n};\n\nclass PaymentDue extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.component = React.createRef();\n    this.state = {\n      input: 0,\n      history: [],\n      totalPaid: 0,\n      minimumDue: 0,\n      loanLeft: 0,\n      paidAll: 0,\n      loanFree: false,\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ input: parseFloat(e.target.value) });\n  };\n\n  onClick = () => {\n    this.calcTotal();\n    if (this.state.input.toFixed(2) === this.state.paidAll) {\n      this.freeDebtMessage();\n    }\n    else if (this.state.input >= (this.state.paidAll - this.state.minimumDue)){\n      \n  \n    } else if (this.state.input > this.state.paidAll) {\n      alert(\n        ` We have noticed that the payment amount entered is greater than the loan amount. This input is not valid as it is not possible to pay more than what is owed.`\n      );\n    } else if (this.state.input >= this.state.minimumDue.toFixed(2)) {\n      this.paymentsHistory();\n      this.updatePay();\n      this.component.current.computeData();\n    } else {\n      alert(\n        `Please enter a payment amount that is equal to or greater than the minimum monthly due. ${this.state.minimumDue.toFixed(\n          2\n        )}`\n      );\n    }\n  };\n\n  paymentsHistory = () => {\n    this.setState((prevState) => ({\n      history: [\n        ...prevState.history,\n        {\n          paymentNumber: prevState.history.length + 1,\n          id: Date.now(),\n          label: this.state.input,\n          totalPaid: this.state.totalPaid,\n          balance: this.state.loanLeft,\n        },\n      ],\n    }));\n  };\n\n  updatePay = () => {\n    this.setState({ totalPaid: this.state.totalPaid + this.state.input });\n  };\n  getData = (minimumPay, debt, paidAll) => {\n    this.setState({\n      minimumDue: minimumPay,\n      loanLeft: debt.toFixed(2),\n      paidAll: paidAll.toFixed(2),\n    });\n  };\n  calcTotal = () => {\n    let calcTotal = this.state.loanLeft * 1 + this.state.minimumDue * 1;\n    this.setState({ paidAll: calcTotal.toFixed(2) });\n  };\n  freeDebtMessage = () => {\n    this.setState({ loanFree: true });\n  };\n\n  reset = () => {\n    this.setState(INIT_STATE);\n\n    this.component.current.reset();\n  };\n  render() {\n    let { history, totalPaid, input, minimumDue, loanLeft, paidAll } =\n      this.state;\n\n    const loanFreeMessage = this.state.loanFree ? \"is-visible\" : \"\";\n\n    return (\n      <header className=\"App-header\">\n        <Entries ref={this.component} payment={input} getData={this.getData} />\n\n        <div className={`modal ${loanFreeMessage}`}>\n          <h1 className=\"free-loan\">\n            Dear User, Congratulations! Based on the information provided, it\n            appears that your loan has been fully paid off. Thank you for using\n            our debt calculator to track your loan progress. If you have any\n            questions or need further assistance, please do not hesitate to\n            contact us. <br /> Best regards, The Debt Calculator Team.\n          </h1>\n          <button class=\"button\" onClick={this.reset}>\n            Start a New Loan\n          </button>\n        </div>\n        <div className=\"main-container\">\n          <div className=\"pay container\">\n            <h3 className=\"title\">Payments</h3>\n            <input\n              className=\"input\"\n              type=\"number\"\n              step=\"0.01\"\n              min={minimumDue.toFixed(2)}\n              max={loanLeft}\n              value={input}\n              placeholder=\"$ 00.0\"\n              onChange={this.handleChange}\n            />\n            <button className=\"button\" onClick={this.onClick}>\n              Make a Payment\n            </button>\n            <div className=\"title\">\n              Minimum Monthly Payment :{\" \"}\n              <span className=\"digits\">$ {minimumDue.toFixed(2)}</span>\n            </div>\n            <div className=\"text-payments\">\n              {\" \"}\n              New Loan: <span className=\"digits\">$ {paidAll}</span>\n            </div>\n          </div>\n          <div className=\"history container\">\n            <h3 className=\"title\">Payments Report</h3>\n            <tbody className=\"payments-history\">\n              {history.map((payment, index) => {\n                const { paymentNumber, label, totalPaid, balance } = payment;\n                return (\n                  <tr key={index}>\n                    {[paymentNumber, label, totalPaid, balance].map((val) => (\n                      <td>{val}</td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </tbody>\n            <h5 className=\"title\">Total Amount Paid:</h5>\n            <span className=\"digits\">$ {totalPaid.toFixed(2)}</span>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default PaymentDue;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}