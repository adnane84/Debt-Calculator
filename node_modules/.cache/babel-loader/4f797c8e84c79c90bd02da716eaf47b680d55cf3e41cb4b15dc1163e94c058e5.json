{"ast":null,"code":"var _jsxFileName = \"/Users/adnaneabid/Desktop/react/DevslopesCalculatorReact/calculator/src/PaymentDue.jsx\";\nimport React from \"react\";\nimport Entries from \"./Entries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PaymentDue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        input: parseFloat(e.target.value)\n      });\n    };\n    this.onClick = () => {\n      this.calcTotal();\n      if (this.state.input.toFixed(2) === this.state.totalPayoff) {\n        this.popUp();\n      } else if (this.state.input > this.state.totalPayoff) {\n        alert(`Your payment cannot be greater than the amount owed`);\n      } else if (this.state.input >= this.state.debtLeft) {\n        alert(`Your payment cannot be greater than your Remaining Debt. \n            If you want to payoff your entire loan, you must pay off Remaining Debt + Interest + a 1% Principal Paymet.Current Payoff Total: $${this.state.totalPayoff} `);\n      } else if (this.state.input >= this.state.minPay.toFixed(2)) {\n        this.createLi();\n        this.updatePay();\n        this.child.current.computeData();\n      } else {\n        alert(`Payments must be greater than or equal to ${this.state.minPay.toFixed(2)}`);\n      }\n    };\n    this.createLi = () => {\n      let newItem = {\n        label: this.state.input,\n        id: Date.now()\n      };\n      this.setState(prevState => ({\n        list: [...prevState.list, newItem]\n      }));\n    };\n    this.updatePay = () => {\n      this.setState({\n        totalPaid: this.state.totalPaid + this.state.input\n      });\n    };\n    this.getData = (minimumPay, debt, totalPayoff) => {\n      this.setState({\n        minPay: minimumPay,\n        debtLeft: debt.toFixed(2),\n        totalPayoff: totalPayoff.toFixed(2)\n      });\n    };\n    this.calcTotal = () => {\n      let calcTotal = this.state.debtLeft * 1 + this.state.minPay * 1;\n      this.setState({\n        totalPayoff: calcTotal.toFixed(2)\n      });\n    };\n    this.popUp = () => {\n      this.setState({\n        isModal: true\n      });\n    };\n    this.reset = () => {\n      this.setState({\n        input: 0,\n        list: [],\n        totalPaid: 0,\n        minPay: 0,\n        debtLeft: 0,\n        totalPayoff: 0,\n        isModal: false\n      });\n      this.child.current.reset();\n    };\n    this.child = /*#__PURE__*/React.createRef();\n    this.state = {\n      input: 0,\n      list: [],\n      totalPaid: 0,\n      minPay: 0,\n      debtLeft: 0,\n      totalPayoff: 0,\n      isModal: false\n    };\n  }\n  render() {\n    let {\n      list,\n      totalPaid,\n      input,\n      minPay,\n      debtLeft,\n      totalPayoff\n    } = this.state;\n    const modalVisible = this.state.isModal ? 'is-visible' : '';\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal ${modalVisible}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Congratulations! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 34\n          }, this), \"Your Loan is Paid Off!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button\",\n          onClick: this.reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pay container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Payments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          min: minPay.toFixed(2),\n          max: debtLeft,\n          value: input,\n          placeholder: \"90\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: this.onClick,\n          children: \"Log Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtext\",\n          children: [\"Minimum Payment : \", minPay.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtext\",\n          children: [\"Total Debt : \", totalPayoff]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"log\",\n          children: list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"$\", item.label]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Total Amount Paid:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"number-left\",\n          children: totalPaid.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Entries, {\n        ref: this.child,\n        payment: input,\n        childFunc: this.childFunc,\n        getData: this.getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default PaymentDue;","map":{"version":3,"names":["React","Entries","PaymentDue","Component","constructor","props","handleChange","e","setState","input","parseFloat","target","value","onClick","calcTotal","state","toFixed","totalPayoff","popUp","alert","debtLeft","minPay","createLi","updatePay","child","current","computeData","newItem","label","id","Date","now","prevState","list","totalPaid","getData","minimumPay","debt","isModal","reset","createRef","render","modalVisible","map","item","childFunc"],"sources":["/Users/adnaneabid/Desktop/react/DevslopesCalculatorReact/calculator/src/PaymentDue.jsx"],"sourcesContent":["import React from \"react\";\nimport Entries from \"./Entries\";\n\nclass PaymentDue extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.child = React.createRef()\n\n        this.state={\n            input:0,\n            list: [],\n            totalPaid:0,\n            minPay:0,\n            debtLeft:0,\n            totalPayoff:0,\n            isModal:false,\n            \n        }\n    }\n\n    handleChange= (e) => {\n        this.setState({input:parseFloat(e.target.value)})\n    }\n\n    onClick=()=> {\n\n        this.calcTotal()\n\n        if (this.state.input.toFixed(2) === this.state.totalPayoff) {\n            this.popUp();\n        }\n        else if (this.state.input > (this.state.totalPayoff)) {\n            alert(`Your payment cannot be greater than the amount owed`)\n        }\n        else if (this.state.input >= (this.state.debtLeft)) {\n            alert(`Your payment cannot be greater than your Remaining Debt. \n            If you want to payoff your entire loan, you must pay off Remaining Debt + Interest + a 1% Principal Paymet.Current Payoff Total: $${this.state.totalPayoff} `)\n        }\n        else if (this.state.input >= (this.state.minPay.toFixed(2))){\n        this.createLi();\n        this.updatePay();\n        this.child.current.computeData();\n        }\n        else{alert(`Payments must be greater than or equal to ${this.state.minPay.toFixed(2)}`)}\n    }\n\n   \n    createLi = () => {\n        let newItem = {\n            label: this.state.input,\n            id: Date.now(),\n        }\n        \n        this.setState(prevState => ({\n            list:[...prevState.list, newItem]\n        }))\n    }\n\n    updatePay=() =>{\n        this.setState({totalPaid: this.state.totalPaid + this.state.input\n        })\n    }\n     getData=(minimumPay, debt, totalPayoff)=>{\n         this.setState({\n            minPay: minimumPay, \n            debtLeft: debt.toFixed(2),\n            totalPayoff: totalPayoff.toFixed(2)\n        });\n     }\n     calcTotal = () => {\n        let calcTotal = (this.state.debtLeft*1) + (this.state.minPay*1)\n        this.setState({totalPayoff: calcTotal.toFixed(2)})\n     }\n     popUp = () => {\n        this.setState({isModal:true,})\n     }\n    \n     reset = () => {\n        this.setState({\n            input:0,\n            list:[],\n            totalPaid:0,\n            minPay:0,\n            debtLeft:0,\n            totalPayoff:0,\n            isModal:false,\n        });\n\n        this.child.current.reset();\n     }\n    render() {\n        let {list, totalPaid, input, minPay, debtLeft, totalPayoff} = this.state;\n        \n        const modalVisible = this.state.isModal ? 'is-visible' : '' ;\n\n        return(\n        <header className=\"App-header\">  \n            <div className={`modal ${modalVisible}`}> \n            <h1>Congratulations! <br/>Your Loan is Paid Off!</h1>\n            <button class='button' onClick={this.reset}>Reset</button>\n            </div>  \n            <div className='pay container'>\n            \n                <h3>Payments</h3>\n                <input \n                    type=\"number\"\n                    step='0.01'\n                    min={minPay.toFixed(2)}\n                    max={debtLeft}\n                    value={input}\n                    placeholder='90'\n                    onChange={this.handleChange}/>\n                <button className='button' onClick={this.onClick}>Log Payment</button>\n                <div className='subtext'>Minimum Payment : {minPay.toFixed(2)}</div>\n                <div className='subtext'>Total Debt : {totalPayoff}</div>\n                <h3>Log</h3>\n                <ol className='log'>\n                {list.map((item) => <li key={item.id}>${item.label}</li>)}\n                </ol>\n                <h5>Total Amount Paid:</h5>\n                <span className='number-left'>{totalPaid.toFixed(2)}</span>\n            </div>\n            <Entries \n            ref={this.child} \n            payment ={input} \n            childFunc = {this.childFunc}\n            getData = {this.getData}/>\n        </header>\n        )\n    }\n}\n\nexport default PaymentDue;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}