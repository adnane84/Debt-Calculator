{"ast":null,"code":"var _jsxFileName = \"/Users/adnaneabid/Desktop/react/DevslopesCalculatorReact/calculator/src/Entries.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Entries extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        [`${e.target.name}`]: e.target.value\n      });\n    };\n    this.dataFromInput = () => {\n      const {\n        debtInput,\n        interest\n      } = this.state;\n      let debt = debtInput * 1;\n      let monthlyIntPayment = interest * debt / 100 / 12;\n      let minPayment = monthlyIntPayment + debt * 0.01; //minTotalPay\n      let debtFree = minPayment + debt; //totalPayoff\n\n      this.setState({\n        newInterest: interest * debtInput / 100 / 12,\n        debtDue: debt * 1,\n        miniDue: minPayment,\n        totalPaid: debt / minPayment\n      });\n      this.props.dataFromInput(minPayment, debt, debtFree);\n    };\n    this.computeDebt = () => {\n      if (this.state.debtDue > 100) {\n        const {\n          interest,\n          debtDue\n        } = this.state;\n        const {\n          payment\n        } = this.props;\n        let monthlyInt = interest / 100 / 12;\n        let monthlyIntPay = monthlyInt * debtDue;\n        let newMiniDue = monthlyIntPay + debtDue * 0.01;\n        let principlePaid = payment - monthlyIntPay;\n        let newDebt = debtDue - principlePaid;\n        let debtFree = newMiniDue + newDebt;\n        this.setState({\n          newInterest: monthlyInt * debtDue,\n          debtDue: newDebt * 1,\n          miniDue: newMiniDue,\n          totalPaid: newDebt / principlePaid\n        });\n        this.props.dataFromInput(newMiniDue, newDebt, debtFree);\n      } else {\n        const {\n          debtDue\n        } = this.state;\n        const {\n          payment\n        } = this.props;\n        let newDebt = debtDue - payment;\n        let newMiniDue = debtDue * 0.01 + newDebt;\n        let totalPaid = debtDue * 0.01 + newDebt;\n        this.state({\n          debtDue: newDebt,\n          miniDue: newMiniDue,\n          totalPaid: newDebt / newMiniDue\n        });\n        this.props.dataFromInput(newMiniDue, newDebt, totalPaid);\n      }\n    };\n    this.resetTheCalculator = () => {\n      this.setState({\n        debtInput: 0,\n        //debtInput\n        interest: 0,\n        //interestInput\n        newInterest: 0,\n        // monthlyInterest\n        debtDue: 0,\n        // remainingDebt\n        miniDue: 0,\n        // minPay\n        totalPaid: 0 // remainingPayments\n      });\n    };\n    this.state = {\n      debtInput: 0,\n      //debtInput\n      interest: 0,\n      //interestInput\n      newInterest: 0,\n      // monthlyInterest\n      debtDue: 0,\n      // remainingDebt\n      miniDue: 0,\n      // minPay\n      totalPaid: 0 //remainingPayment\n    };\n  }\n\n  render() {\n    const {\n      debtInput,\n      interest,\n      debtDue,\n      miniDue,\n      totalPaid\n    } = this.state;\n    const formData = [{\n      header: 'Debt',\n      label: `$${debtInput}`,\n      name: 'debtInput',\n      type: 'range',\n      min: '1000',\n      max: '200000',\n      value: debtInput,\n      step: '500',\n      onChange: this.handleChange,\n      className: 'slider',\n      id: 'debtRange'\n    }, {\n      header: 'Interest Per Year',\n      label: `$${interest}%`,\n      name: 'interest',\n      type: 'range',\n      min: '1',\n      max: '30',\n      value: interest,\n      step: '0.1',\n      onChange: this.handleChange,\n      className: 'slider',\n      id: 'InterestRange'\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }, this);\n  }\n}\nexport default Entries;","map":{"version":3,"names":["React","Entries","Component","constructor","props","handleChange","e","setState","target","name","value","dataFromInput","debtInput","interest","state","debt","monthlyIntPayment","minPayment","debtFree","newInterest","debtDue","miniDue","totalPaid","computeDebt","payment","monthlyInt","monthlyIntPay","newMiniDue","principlePaid","newDebt","resetTheCalculator","render","formData","header","label","type","min","max","step","onChange","className","id"],"sources":["/Users/adnaneabid/Desktop/react/DevslopesCalculatorReact/calculator/src/Entries.jsx"],"sourcesContent":["import React from \"react\";\n\nclass Entries extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      debtInput: 0, //debtInput\n      interest: 0, //interestInput\n      newInterest: 0, // monthlyInterest\n      debtDue: 0, // remainingDebt\n      miniDue: 0, // minPay\n      totalPaid: 0, //remainingPayment\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [`${e.target.name}`]: e.target.value });\n  };\n\n  dataFromInput = () => {\n    const { debtInput, interest } = this.state;\n    let debt = debtInput * 1;\n    let monthlyIntPayment = (interest * debt) / 100 / 12;\n    let minPayment = monthlyIntPayment + debt * 0.01; //minTotalPay\n    let debtFree = minPayment + debt; //totalPayoff\n\n    this.setState({\n      newInterest: (interest * debtInput) / 100 / 12,\n      debtDue: debt * 1,\n      miniDue: minPayment,\n      totalPaid: debt / minPayment,\n    });\n\n    this.props.dataFromInput(minPayment, debt, debtFree);\n  };\n\n  computeDebt = () => {\n    if (this.state.debtDue > 100) {\n      const { interest, debtDue } = this.state;\n      const { payment } = this.props;\n\n      let monthlyInt = interest / 100 / 12;\n      let monthlyIntPay = monthlyInt * debtDue;\n      let newMiniDue = monthlyIntPay + debtDue * 0.01;\n      let principlePaid = payment - monthlyIntPay;\n      let newDebt = debtDue - principlePaid;\n      let debtFree = newMiniDue + newDebt;\n\n      this.setState({\n        newInterest: monthlyInt * debtDue,\n        debtDue: newDebt * 1,\n        miniDue: newMiniDue,\n        totalPaid: newDebt / principlePaid,\n      });\n\n      this.props.dataFromInput(newMiniDue, newDebt, debtFree);\n    } else {\n      const { debtDue } = this.state;\n      const { payment } = this.props;\n\n      let newDebt = debtDue - payment;\n      let newMiniDue = debtDue * 0.01 + newDebt;\n      let totalPaid = debtDue * 0.01 + newDebt;\n\n      this.state({\n        debtDue: newDebt,\n        miniDue: newMiniDue,\n        totalPaid: newDebt / newMiniDue,\n      });\n\n      this.props.dataFromInput(newMiniDue, newDebt, totalPaid);\n    }\n  };\n\n  resetTheCalculator = () => {\n    this.setState({\n      debtInput: 0, //debtInput\n      interest: 0, //interestInput\n      newInterest: 0, // monthlyInterest\n      debtDue: 0, // remainingDebt\n      miniDue: 0, // minPay\n      totalPaid: 0,  // remainingPayments\n    });\n  };\n\n  render() {\n   \n    const {debtInput, interest, debtDue, miniDue, totalPaid} = this.state\n    \n    const formData = [\n      {header: 'Debt', label:`$${debtInput}`, name:'debtInput', type:'range', min:'1000', max:'200000',\n      value:debtInput, step:'500', onChange:this.handleChange, className:'slider', id:'debtRange'},\n      {header: 'Interest Per Year', label:`$${interest}%`, name:'interest', type:'range', min:'1', max:'30',\n      value:interest, step:'0.1', onChange:this.handleChange, className:'slider', id:'InterestRange'}]\n    return (\n       <div>\n        \n       </div>\n    )\n  }\n}\n\nexport default Entries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}